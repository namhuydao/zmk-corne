/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&none  &kp Q        &kp W       &kp E        &kp R        &kp T           &kp Y            &kp U         &kp I         &kp O       &kp P                &none
&none  &ht LMETA A  &ht LALT S  &ht LCTRL D  &ht LSHFT F  &kp G           &kp H            &ht RSHIFT J  &ht RCTRL K   &ht RALT L  &ht RMETA SEMICOLON  &none
&none  &kp Z        &kp X       &kp C        &kp V        &kp B           &kp N            &kp M         &kp COMMA     &kp DOT     &kp FSLH             &none
                                &caps_word   &lt 2 SPACE  &lt 4 ESCAPE    &lt 3 BACKSPACE  &lt 1 RET     &kp CAPSLOCK
            >;
        };

        symbol {
            bindings = <
&none  &kp PIPE   &kp LT     &kp GT          &kp LBRC          &kp RBRC             &none  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR    &none
&none  &kp BSLH   &kp TILDE  &kp UNDERSCORE  &kp LPAR          &kp RPAR             &none  &kp PERCENT      &kp CARET    &kp AMPERSAND  &kp ASTERISK  &none
&none  &kp SLASH  &kp GRAVE  &kp EQUAL       &kp LBKT          &kp RBKT             &none  &none            &none        &none          &none         &none
                             &none           &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES    &none  &none            &none
            >;
        };

        number {
            bindings = <
&none  &kp RC(Z)     &kp RC(X)  &kp RC(C)  &kp RC(V)   &kp DEL            &kp PLUS       &kp N7  &kp N8  &kp N9  &kp ASTERISK  &none
&none  &kp LEFT_GUI  &kp CAPS   &kp TAB    &caps_word  &kp PRINTSCREEN    &kp MINUS      &kp N4  &kp N5  &kp N6  &kp SLASH     &none
&none  &none         &none      &none      &none       &none              &kp COMMA      &kp N1  &kp N2  &kp N3  &kp DOT       &none
                                &none      &none       &none              &kp BACKSPACE  &kp N0  &none
            >;
        };

        direction {
            bindings = <
&none  &none                 &kp HOME              &kp UP                &kp END               &kp PAGE_UP    &none  &none       &none      &none     &none      &none
&none  &none                 &kp LEFT_ARROW        &kp DOWN_ARROW        &kp RIGHT_ARROW       &kp PG_DN      &none  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RMETA  &none
&none  &kp LA(LC(NUMBER_1))  &kp LA(LC(NUMBER_2))  &kp LA(LC(NUMBER_3))  &kp LA(LC(NUMBER_4))  &kp LA(F4)     &none  &none       &none      &none     &none      &none
                                                   &none                 &none                 &none          &none  &none       &none
            >;
        };

        fn+media {
            bindings = <
&none  &kp C_BRI_DN  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE    &bt BT_SEL 0  &kp F1        &kp F2      &kp F3   &kp F4   &none
&none  &kp LMETA     &kp LEFT_ALT          &kp LCTRL          &kp LEFT_SHIFT   &none         &bt BT_SEL 1  &kp F5        &kp F6      &kp F7   &kp F8   &none
&none  &none         &kp C_PLAY_PAUSE      &kp C_PREVIOUS     &kp C_NEXT       &none         &bt BT_SEL 2  &kp F9        &kp F10     &kp F11  &kp F12  &none
                                           &none              &none            &none         &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_CLR
            >;
        };
    };
};
